Docker Instructions:-
*********************
1. Installation of Docker
yum install docker -y

2. Checking the version of Docker
docker --version

3. Docker stop/start command
docker stop <<imageid>>
docker start <<imageid>>

3. Repository Information available in below location
[root@ip-172-31-4-1 ~]# cd /etc/yum.repos.d/
[root@ip-172-31-4-1 yum.repos.d]# ls -ltr
total 8
-rw-r--r-- 1 root root 1003 Jan 13 23:22 amzn2-core.repo
-rw-r--r-- 1 root root 2150 Mar  5 00:20 amzn2-extras.repo

4. Start and Staus of Docker 
sudo systemctl start docker
sudo systemctl status docker
sudo systemctl stop docker
sudo systemctl restart docker

5. Run the Docker Container
docker container run nginx
docker container run -d --name mynginx1.0  nginx
docker run postgres:9.6

6. Docker list/images command - Lists running and stopped containers
docker ps -a
docker images

7. Request to the daemon's socket, see if it is up:
curl --unix-socket /var/run/docker.sock  http://localhost/_ping; echo

8. Docker Pull command
docker pull hello-world

9. Docker logs command
docker logs 2f8e4dabb5b  <CONTAINER ID or CONTAINER NAME>

10. Docker stop command
docker container stop cbaa0c1a66ca
cbaa0c1a66ca

11. Docker images command
docker images

12. Docker Build command (Custom images files)
docker build -t myfisrtimage .

13. Binding the ports
root@ip-172-31-8-198:~/docker# docker run -d -p8080:80 nginx
96e70a4f04767f098a5269e31e76522baf2fdc04f92e84744d87b69ecf80e817
root@ip-172-31-8-198:~/docker# docker ps -a
CONTAINER ID   IMAGE            COMMAND                  CREATED              STATUS                          PORTS                                       NAMES
96e70a4f0476   nginx            "/docker-entrypoint.…"   5 seconds ago        Up 4 seconds                    0.0.0.0:8080->80/tcp, :::8080->80/tcp       xenodochial_snyder
5aff955c94a6   redis            "docker-entrypoint.s…"   40 seconds ago       Up 39 seconds                   0.0.0.0:6000->6379/tcp, :::6000->6379/tcp   infallible_elgamal

# Map multiple ports
docker run -d -p 8080:80 -p 4433:443 my_image

14. Assign the Custom Name of the container
docker run -d -p8001:80 --name nginx-older nginx

Output:
CONTAINER ID   IMAGE     COMMAND                  CREATED              STATUS              PORTS                                       NAMES
a66295d3d94d   nginx     "/docker-entrypoint.…"   About a minute ago   Up About a minute   0.0.0.0:8001->80/tcp, :::8001->80/tcp       nginx-older
313447e16758   redis     "docker-entrypoint.s…"   2 minutes ago        Up 2 minutes        0.0.0.0:6002->6379/tcp, :::6002->6379/tcp   redis-older

Error:
docker: Error response from daemon: Conflict. The container name "/nginx-older" is already in use by container "a66295d3d94dabf18e4dcd45045782ea31b648fa99ce54b3cc747de4df1e59ae". 
You have to remove (or rename) that container to be able to reuse that name.

15. EXEC Command (Exception Handlings)
docker exec -it a66295d3d94d /bin/bash
root@a66295d3d94d:/# ls
bin  boot  dev  docker-entrypoint.d  docker-entrypoint.sh  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var

root@a66295d3d94d:/# env
HOSTNAME=a66295d3d94d
PWD=/
PKG_RELEASE=1~bookworm
HOME=/root
DYNPKG_RELEASE=1~bookworm
NJS_VERSION=0.8.9
TERM=xterm
SHLVL=1
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
NGINX_VERSION=1.27.4
NJS_RELEASE=1~bookworm
_=/usr/bin/env

16. Docker Project
docker run -d -p 27017:27017 -e MONGO_INITDB_ROOT_USERNAME=admin -e MONGO_INITDB_ROOT_PASSWORD=secret --name mongodb --net mongo-network mongo
docker run -d -p 8081:8081 -e ME_CONFIG_MONGODB_ADMINUSERNAME='admin' -e ME_CONFIG_MONGODB_ADMINPASSWOR='secret' --net mongo-network --name mongo-express -e ME_CONFIG_MONGODB_SERVER='mongodb' mongo-express


Reference:
https://stackoverflow.com/questions/51857634/cannot-connect-to-the-docker-daemon-at-unix-var-run-docker-sock-is-the-docke
https://medium.com/@srijaanaparthy/step-by-step-guide-to-install-docker-on-ubuntu-in-aws-a39746e5a63d (how to start docker)
https://www.youtube.com/watch?v=3c-iBn73dDE&t=853s

